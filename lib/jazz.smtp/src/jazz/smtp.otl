(module jazz.smtp jazz
  (import (base64))
  (import (jazz.io))
  (import (jazz.time))
  (hub get-from)
  (hub get-message)
  (hub get-to)
  (hub send-email-message)
  (hub send-on)
  (class MIME-Message extends Object
    (slot from getter generate)
    (slot to getter generate)
    (slot subject getter generate)
    (slot message getter generate)
    (slot cc getter generate)
    (slot bcc getter generate)
    (slot content-type getter generate)
    (slot attachments getter generate)
    (slot quoted-printable? getter generate)
    (method override (initialize self from to subject message (cc: cc (unspecified)) (bcc: bcc (unspecified)) (content-type: content-type (unspecified)) (attachments: attachments (unspecified)) (quoted-printable?: quoted-printable? (unspecified))))
    (method (remove-unicode-characters self string))
    (method (format-mime-date self date))
    (method (make-mime-header self))
    (method (send-message self port))
    (method (encode-subject self))
    (method (send-file self file port))
    (method package (send-on self port)))
  (hub get-subject)
  (hub get-cc)
  (hub get-bcc)
  (hub get-content-type)
  (hub get-attachments)
  (hub get-quoted-printable?)
  (class SMTP-Client extends Object
    (slot port)
    (method override (initialize self server-address (port-number: port-number (unspecified)) (username: username (unspecified)) (password: password (unspecified))))
    (method override (destroy self))
    (method (get-reply self code (invalid (unspecified))))
    (method (get-login-methods self commands))
    (method (auth-login self username password))
    (method (auth-plain self username password))
    (method package (send-email-message self mail <MIME-Message>)))
  (definition public (send-email message server (port-number: port-number (unspecified)) (username: username (unspecified)) (password: password (unspecified))))
  (definition public (string->quoted-printable-string string)))
