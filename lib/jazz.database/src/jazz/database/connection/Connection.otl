(module jazz.database.connection.Connection jazz
  (import (jazz.database))
  (import (jazz.schema))
  (class Connection extends Object
    (slot data-source getter generate)
    (slot inventory)
    (method override (initialize self data-source . rest))
    (method virtual (setup-connection self))
    (method override (destroy self))
    (method virtual (destroy-connection self))
    (method override (print self output readably))
    (method public (get-inventory self . rest))
    (method public (reload-inventory self . rest))
    (method package virtual (open self data-source . rest))
    (method public virtual (get-state self))
    (method public virtual (new-request self))
    (method public virtual (supports-multirequests? self))
    (method public virtual (load-request self command (name: name (unspecified)) (max-load: max-load (unspecified)) (data-class: data-class (unspecified))))
    (method public virtual (load-multirequest self command (max-load: max-load (unspecified)) (data-classes: data-classes (unspecified))))
    (method public virtual (load-rows self command))
    (method public virtual (load-row self command))
    (method public (load-value self command column))
    (method public (load-values self command column))
    (method public virtual (execute self command))
    (method public virtual (comment self string . parameters))
    (method public virtual (begin-transaction self))
    (method public virtual (commit-transaction self))
    (method public virtual (rollback-transaction self))
    (method public (with-transaction self proc)))
  (hub get-data-source)
  (hub get-inventory)
  (hub reload-inventory)
  (hub open)
  (hub get-state)
  (hub new-request)
  (hub supports-multirequests?)
  (hub load-request)
  (hub load-multirequest)
  (hub load-rows)
  (hub load-row)
  (hub load-value)
  (hub load-values)
  (hub execute)
  (hub comment)
  (hub begin-transaction)
  (hub commit-transaction)
  (hub rollback-transaction)
  (hub with-transaction))
