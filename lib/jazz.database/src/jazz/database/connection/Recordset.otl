(module jazz.database.connection.Recordset jazz
  (import (jazz.database))
  (import (jazz.schema))
  (class Recordset extends Object
    (method override (initialize self command . rest))
    (method virtual (setup-recordset self initargs))
    (method override (destroy self))
    (method virtual (destroy-recordset self))
    (method public virtual (opened? self))
    (method package virtual (open self command . rest))
    (method public virtual (get-state self))
    (method public virtual (new-recordset-metadata self))
    (method public virtual (get-field-type self metadata field))
    (method public virtual (get-field-value self metadata field))
    (method public virtual (safe-field-value self metadata field))
    (method public virtual (next-recordset! self))
    (method public virtual (get-columns self))
    (method public virtual (get-rows self table (max-load: max-load (unspecified)) (data-class: data-class (unspecified))))
    (method public virtual (move-first self))
    (method public virtual (move-last self))
    (method public virtual (move-next self))
    (method public virtual (move-previous self))
    (method public virtual (at-bof? self))
    (method public virtual (at-eof? self))
    (method public virtual (iterate-records self proc))
    (method public virtual (for-each-record self proc))
    (method public (create-table self (name: name (unspecified)) (max-load: max-load (unspecified))))
    (method package (load-table self table (max-load: max-load (unspecified)) (data-class: data-class (unspecified)))))
  (hub opened?)
  (hub open)
  (hub get-state)
  (hub new-recordset-metadata)
  (hub get-field-type)
  (hub get-field-value)
  (hub safe-field-value)
  (hub next-recordset!)
  (hub get-columns)
  (hub get-rows)
  (hub move-first)
  (hub move-last)
  (hub move-next)
  (hub move-previous)
  (hub at-bof?)
  (hub at-eof?)
  (hub iterate-records)
  (hub for-each-record)
  (hub create-table)
  (hub load-table))
