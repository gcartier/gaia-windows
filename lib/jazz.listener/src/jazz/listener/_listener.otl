(module jazz.listener jazz
  (export (jazz.listener.foreign))
  (import (jazz.listener.foreign))
  (import (jazz.io))
  (definition protected (start-socket-server))
  (definition protected (set-fifo-prefix prefix))
  (definition protected next-fifo-no <fx>)
  (definition protected (next-fifo-no!) <fx>)
  (definition public (open-stream-listener (name (unspecified))))
  (definition protected (empty-fifo-directory (feedback?: feedback? (unspecified))))
  (definition public (start-stream-listener listener))
  (definition public (stop-stream-listener listener))
  (definition public (close-stream-listener listener))
  (class Stream-Listener extends Object
    (slot filename getter generate)
    (slot read-port getter generate)
    (slot write-file getter generate)
    (slot closed? accessors generate)
    (method override (initialize self filename . rest))
    (method override (destroy self))
    (method override (print self output readably))
    (method public (wait self)))
  (hub get-filename)
  (hub get-read-port)
  (hub get-write-file)
  (hub get-closed?)
  (hub set-closed?)
  (hub wait))
