(module jazz.schema.data.Data-Schema jazz
  (import (jazz.application))
  (import (jazz.database))
  (import (jazz.entity))
  (import (jazz.preferences))
  (import (jazz.reporter))
  (import (jazz.schema))
  (class Data-Schema extends Data-Entity implements Entity-Interface
    (method meta public (import-inventory self source-name data-source reporter))
    (slot tables)
    (slot views)
    (slot relations)
    (slot procedures)
    (method override (initialize self (name: name (unspecified)) (parent: parent (unspecified)) (properties: properties (unspecified)) (tables: tables (unspecified)) (views: views (unspecified)) (relations: relations (unspecified)) (procedures: procedures (unspecified))))
    (method override (print self output readably))
    (method public (print-schema self output))
    (method override (get-kind self))
    (method override (create self kind name))
    (method override (add self kind object))
    (method override (get-children self))
    (method override (get-categorized-children self))
    (method public (get-tables self))
    (method public (get-categorized-tables self))
    (method public (get-table self name))
    (method public (add-table self table))
    (method public (add-tables self tables))
    (method public (get-views self))
    (method public (get-categorized-views self))
    (method public (get-view self name))
    (method public (add-view self view))
    (method public (add-views self views))
    (method public (get-relations self))
    (method public (get-categorized-relations self))
    (method public (get-relation self name))
    (method public (add-relation self relation))
    (method public (add-relations self relations))
    (method public (get-procedures self))
    (method public (get-categorized-procedures self))
    (method public (get-procedure self name))
    (method public (add-procedure self procedure))
    (method public (add-procedures self procedures))
    (method public (present self))
    (method package (import-inventory self source-name inventory reporter))
    (method (create-primary-key self data-table table))
    (method (create-columns self data-table table columns-consecutive?))
    (method (create-indexes self data-table table))
    (method (create-triggers self data-table table))
    (method (create-constraints self data-table table))
    (method override (get-factory self))
    (method override (get-factories self))
    (method override (get-presentation self))
    (method override (set-presentation self controller presentation))
    (method override (can-cut-entity? self))
    (method override (can-copy-entity? self))
    (method override (can-paste-entity? self))
    (method override (determine-paster self . rest))
    (method override (can-rename-entity? self))
    (method override (can-delete-entity? self))
    (method override (can-relocate-entity? self))
    (method override (can-view-properties? self))
    (method override (get-standard-properties self)))
  (hub print-schema)
  (hub get-tables)
  (hub get-categorized-tables)
  (hub get-table)
  (hub add-table)
  (hub add-tables)
  (hub get-views)
  (hub get-categorized-views)
  (hub get-view)
  (hub add-view)
  (hub add-views)
  (hub get-relations)
  (hub get-categorized-relations)
  (hub get-relation)
  (hub add-relation)
  (hub add-relations)
  (hub get-procedures)
  (hub get-categorized-procedures)
  (hub get-procedure)
  (hub add-procedure)
  (hub add-procedures)
  (hub present)
  (hub import-inventory))
