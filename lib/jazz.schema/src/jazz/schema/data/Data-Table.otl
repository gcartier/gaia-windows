(module jazz.schema.data.Data-Table jazz
  (import (jazz.database))
  (import (jazz.schema))
  (class Data-Table extends Data-Entity
    (slot request getter generate)
    (slot primary-key)
    (slot columns)
    (slot indexes)
    (slot triggers)
    (slot constraints)
    (slot rows accessors generate)
    (slot missing? accessors generate)
    (method override (initialize self (owner: owner (unspecified)) (name: name (unspecified)) (parent: parent (unspecified)) (properties: properties (unspecified)) (request: request (unspecified)) (primary-key: primary-key (unspecified)) (columns: columns (unspecified)) (column-names: column-names (unspecified)) (indexes: indexes (unspecified)) (triggers: triggers (unspecified)) (constraints: constraints (unspecified)) (rows: rows (unspecified))))
    (method override (print self output readably))
    (method package (print-schema self output))
    (method override (get-kind self))
    (method override (create self kind name))
    (method override (add self kind object))
    (method override (get-children self))
    (method override (get-categorized-children self))
    (method override (property-names self))
    (method public (get-primary-key self))
    (method public (set-primary-key self value))
    (method public (add-primary-key self primary-key))
    (method public (get-columns self))
    (method public (set-columns self value))
    (method public (get-columns-sql self (prefix: prefix (unspecified))))
    (method public (add-column self column))
    (method public (find-column self name))
    (method public (get-indexes self))
    (method public (set-indexes self value))
    (method public (add-index self index))
    (method public (get-triggers self))
    (method public (set-triggers self value))
    (method public (add-trigger self trigger))
    (method public (get-constraints self))
    (method public (set-constraints self value))
    (method public (add-constraint self constraint))
    (method public (get-count self))
    (method public (remove-row self row))
    (method public (remove-rows self))
    (method public (add-row self row))
    (method public (append-row self row))
    (method public (new-row self (state: state (unspecified)) (values: values (unspecified))))
    (method public (get-row self rank))
    (method public (load-request self command connection (max-load: max-load (unspecified))))
    (method public (find-row self name value))
    (method public (find-rows self name value))
    (method public (find-row-by self predicate))
    (method public (find-rows-by self predicate))
    (method public (filter! self predicate))
    (method public (sort-by self name (ascending?: ascending? (unspecified)))))
  (hub get-request)
  (hub get-rows)
  (hub set-rows)
  (hub get-missing?)
  (hub set-missing?)
  (hub print-schema)
  (hub get-primary-key)
  (hub set-primary-key)
  (hub add-primary-key)
  (hub get-columns)
  (hub set-columns)
  (hub get-columns-sql)
  (hub add-column)
  (hub find-column)
  (hub get-indexes)
  (hub set-indexes)
  (hub add-index)
  (hub get-triggers)
  (hub set-triggers)
  (hub add-trigger)
  (hub get-constraints)
  (hub set-constraints)
  (hub add-constraint)
  (hub get-count)
  (hub remove-row)
  (hub remove-rows)
  (hub add-row)
  (hub append-row)
  (hub new-row)
  (hub get-row)
  (hub load-request)
  (hub find-row)
  (hub find-rows)
  (hub find-row-by)
  (hub find-rows-by)
  (hub filter!)
  (hub sort-by))
