(module jazz.optimize.syntax jazz
  (import (jazz.core (phase syntax)))
  (import (jazz.dialect.classes.foundation))
  (import (fmt (except fl upcase downcase)))
  (import (fmt.fmt-c))
  (native jazz:call-emit-expression)
  (native ienv)
  (native iframe)
  (definition protected debug-optimize?)
  (definition protected debug-lambda?)
  (definition protected disable-optimize?)
  (class Definition-Optimize-Declaration extends Definition-Declaration
    (method override (emit-declaration self walker resume environment backend)))
  (class Optimize extends Expression
    (slot debug? getter generate)
    (slot body getter generate)
    (method override (initialize self debug? body . rest))
    (method override (emit-expression self declaration walker resume environment backend)))
  (hub get-debug?)
  (hub get-body)
  (class Inline extends Expression
    (slot code getter generate)
    (slot expansion getter generate)
    (method override (initialize self code expansion . rest))
    (method override (emit-expression self declaration walker resume environment backend)))
  (hub get-code)
  (hub get-expansion)
  (class For extends Expression
    (slot variable getter generate)
    (slot init getter generate)
    (slot test getter generate)
    (slot update getter generate)
    (slot body getter generate)
    (slot expansion getter generate)
    (method override (initialize self variable init test update body expansion . rest))
    (method override (emit-expression self declaration walker resume environment backend)))
  (hub get-variable)
  (hub get-init)
  (hub get-test)
  (hub get-update))
